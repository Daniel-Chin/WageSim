Questions:
    Instead of gradient descend, can I try "trading": 
        Increase the price when there is shortage
        Decrease the price when there is surplus? 
        (Kinda treating the Excess Demand vector as the gradient for p)

Things to think:
    Is there a way to avoid Walras's Law? 
    Does pure supply of labor break Walras's law? 
    How to visualize? Think animation. 
    When population is constant:
        at the beginning, capital is low, processes that are labor-intensive grow. 
        Later, Capital accumulates, and the population constraint becomes prominant, so the world now favors capital-intensive processes. 
        Visualize! capital-intensiveness score, labor score

Notes
    Each process produces mainly one thing, take all things, and require some capital goods. 
    Capital good can be modelled as B_j = A_j * (1-depreciation)

Visuals:
    Process intensity
    Price
    Population
    Wages
    Unemployment
    GDP (price * production)
    Job Distribution

Stride Descend
    First Algo:
        Move in the direction of excess_demand
        If a good turns from excess supply to excess demand, that's a fail. Otherwise, success. 
        if success, Stride length *= 1.1 
        if fail, Stride length *= 0.5 
        if fail, The stride is NOT taken 
        Result:
            Does not work. 
            Algorithm can be stuck with 2 goods competing.
            Good A excess_demand = 0, Good B excess_demand > 0, 
            but raising the price of B will increase good A excess_demand. 
    Second Algo:
        if fail, The stride IS TAKEN 
        Result:
            Success!!!

Mass death
    Because every process only produce 1 single good, 
    As long as a good becomes free good, those processes die. 
    After they die, the world realizes they are not free after all.
    Fix: let processes produce a little bit of everything 

Stiff market
    Similar to mass death. 
    Fix: sticky r

THE INVISIBLE HAND CAN FAIL
    